services:
  app:
    build: .
    image: signet-pqc-mvp:latest
    environment:
      - FEATURE_PCH=${FEATURE_PCH:-true}
      - PCH_ADVISORY=${PCH_ADVISORY:-true}
      - REDIS_URL=redis://redis:6379/0
      - DATA_DIR=/app/var/data
      - SERVER_SIGNING_KEY=/app/keys/sth_ed25519_sk.pem
      - CLIENT_KEYS=/app/config/clients.json
      # Enable TLS exporter channel binding end-to-end (Envoy injects x-tls-exporter)
      - BINDING_TYPE=tls-exporter
      - BINDING_HEADER=X-TLS-Exporter
      # Enforce presence of exporter (deny if missing)
      - REQUIRE_TLS_EXPORTER=true
    depends_on:
      - redis
    ports:
      - "8080:8080"
    volumes:
      - ./keys:/app/keys:ro
      - ./config:/app/config:ro

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  envoy:
    build: ./sandbox/envoy
    image: signet-envoy:latest
    depends_on:
      - app
    ports:
      - "8443:8443"
    environment:
      - BINDING_TYPE=tls-exporter
    volumes:
      - ./sandbox/envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
      - ./sandbox/envoy/certs:/etc/envoy/certs:ro

  prometheus:
    image: prom/prometheus:latest
    depends_on:
      - app
    ports:
      - "9090:9090"
    volumes:
      - ./ops/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./ops/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./ops/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - grafana_data:/var/lib/grafana

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - app
    ports:
      - "8444:8443" # expose nginx on alternate host port for impairment tests
    volumes:
      - ./src/signet/ingress/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./sandbox/envoy/certs:/etc/nginx/certs
    cap_add:
      - NET_ADMIN
    command: ["sh","-lc","nginx -g 'daemon off;'"]

volumes:
  prom_data: {}
  grafana_data: {}

