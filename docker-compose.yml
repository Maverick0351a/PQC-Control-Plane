version: "3.9"

services:
  app:
    build: .
    image: signet-pqc-mvp:latest
    environment:
      - FEATURE_PCH=${FEATURE_PCH:-true}
      - PCH_ADVISORY=${PCH_ADVISORY:-true}
      - REDIS_URL=redis://redis:6379/0
      - DATA_DIR=/app/var/data
      - SERVER_SIGNING_KEY=/app/keys/sth_ed25519_sk.pem
      - CLIENT_KEYS=/app/config/clients.json
      - BINDING_TYPE=tls-exporter
      - BINDING_HEADER=X-TLS-Exporter
      - REQUIRE_TLS_EXPORTER=true
      - SIGNET_EVG_ENABLED=true
      - RECEIPTS_SINK_URL=http://evg:8088/ingest
    depends_on:
      - redis
    ports:
      - "8080:8080"
    volumes:
      - ./keys:/app/keys:ro
      - ./config:/app/config:ro

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  envoy:
    build: ./sandbox/envoy
    image: signet-envoy:latest
    depends_on:
      - app
    ports:
      - "8443:8443"
    environment:
      - BINDING_TYPE=tls-exporter
    volumes:
      - ./sandbox/envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
      - ./sandbox/envoy/certs:/etc/envoy/certs:ro

  prometheus:
    image: prom/prometheus:latest
    depends_on:
      - app
    ports:
      - "9090:9090"
    volumes:
      - ./ops/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./ops/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./ops/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - grafana_data:/var/lib/grafana

  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - app
    ports:
      - "8443:8443"
    volumes:
      - ./src/signet/ingress/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./src/signet/ingress/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./src/signet/ingress/certs:/etc/nginx/certs
      - ./src/signet/ingress/init-cert.sh:/docker-entrypoint.d/10-init-cert.sh:ro
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    command: ["sh","-lc","/docker-entrypoint.d/10-init-cert.sh; nginx -g 'daemon off;'"]

  toxiproxy:
    image: ghcr.io/shopify/toxiproxy:2.6.0
    command: -host=0.0.0.0
    depends_on:
      - nginx
    ports:
      - "8474:8474"
      - "9443:9443"

  evg:
    build: ./src/signet/evg
    image: signet-evg:latest
    ports:
      - "8088:8088"
    environment:
      - EVG_PORT=8088
    profiles: ["dev"]

  sndt:
    build: ./src/signet/sndt
    image: signet-sndt:latest
    ports:
      - "8090:8090"
    environment:
      - SNDT_PORT=8090
    profiles: ["dev"]

  pathlab:
    image: ghcr.io/yourorg/pathlab:latest
    command: ["--listen=:4040", "--upstream=nginx:443"]
    depends_on:
      - nginx
    ports:
      - "4040:4040"
    profiles: ["dev"]

volumes:
  prom_data: {}
  grafana_data: {}

